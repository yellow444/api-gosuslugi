# tests/test_auth.py

import re
import urllib.parse
import pytest
from esia.aas.auth import get_authorization_url
from esia.aas.config import ESIA_AUTH_URL, CLIENT_ID, REDIRECT_URI, SCOPE_ESIA

"""
üìå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.

üîπ –°–æ–≥–ª–∞—Å–Ω–æ:
   - "–ú–µ—Ç–æ–¥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ï–°–ò–ê" (–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –í.2.2)&#8203;:contentReference[oaicite:0]{index=0}
"""

def test_get_authorization_url():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã."""
    
    url = get_authorization_url()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –Ω—É–∂–Ω–æ–≥–æ URL
    assert url.startswith(ESIA_AUTH_URL), "URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å ESIA_AUTH_URL"
    
    # –†–∞–∑–±–∏—Ä–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    parsed_url = urllib.parse.urlparse(url)
    query_params = urllib.parse.parse_qs(parsed_url.query)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –∫–ª—é—á–µ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    assert query_params["client_id"][0] == CLIENT_ID, "–ù–µ–≤–µ—Ä–Ω—ã–π client_id"
    assert query_params["redirect_uri"][0] == REDIRECT_URI, "–ù–µ–≤–µ—Ä–Ω—ã–π redirect_uri"
    assert query_params["response_type"][0] == "code", "–ù–µ–≤–µ—Ä–Ω—ã–π response_type"
    assert query_params["scope"][0] == SCOPE_ESIA, "–ù–µ–≤–µ—Ä–Ω—ã–π scope"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    assert re.match(r"https://esia.gosuslugi.ru/aas/oauth2/ac\?.+", url), "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç URL"