# esia/aas/token.py

import requests
from esia.aas.config import ESIA_TOKEN_URL, CLIENT_ID, CLIENT_SECRET, REDIRECT_URI
from esia.aas.errors import handle_http_errors, handle_network_errors, parse_error

"""
üìå –ü–æ–ª—É—á–µ–Ω–∏–µ access_token —á–µ—Ä–µ–∑ Authorization Code Flow –∏ Client Credentials Flow.

üîπ –°–æ–≥–ª–∞—Å–Ω–æ:
   - "–ú–µ—Ç–æ–¥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ï–°–ò–ê" (—Ä–∞–∑–¥–µ–ª 4.3)&#8203;:contentReference[oaicite:4]{index=4}
   - "–ú–µ—Ç–æ–¥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å REST API –¶–∏—Ñ—Ä–æ–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è" (—Ä–∞–∑–¥–µ–ª 5.1.5)&#8203;:contentReference[oaicite:5]{index=5}

üìÑ –ï–°–ò–ê –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–≤–∞ —Å–ø–æ—Å–æ–±–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤:
1. **Authorization Code Flow** (–ø–æ –∫–æ–¥—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
2. **Client Credentials Flow** (–¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞)
"""

@handle_network_errors
def exchange_code_for_token(auth_code: str):
    """–û–±–º–µ–Ω–∏–≤–∞–µ—Ç authorization_code –Ω–∞ access_token."""
    data = {
        "grant_type": "authorization_code",
        "code": auth_code,
        "client_id": CLIENT_ID,
        "client_secret": CLIENT_SECRET,
        "redirect_uri": REDIRECT_URI
    }
    response = requests.post(ESIA_TOKEN_URL, data=data)

    handle_http_errors(response)

    response_json = response.json()
    if "error" in response_json:
        raise parse_error(response.text)

    return response_json


@handle_network_errors
def get_service_token():
    """–ü–æ–ª—É—á–∞–µ—Ç access_token –¥–ª—è API –ï–ü–ì–£ (Client Credentials Flow)."""
    data = {
        "grant_type": "client_credentials",
        "client_id": CLIENT_ID,
        "client_secret": CLIENT_SECRET
    }
    response = requests.post(ESIA_TOKEN_URL, data=data)

    handle_http_errors(response)

    response_json = response.json()
    if "error" in response_json:
        raise parse_error(response.text)

    return response_json
